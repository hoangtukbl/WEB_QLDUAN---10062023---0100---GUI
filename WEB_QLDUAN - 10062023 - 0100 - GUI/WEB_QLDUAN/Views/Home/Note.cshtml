@{
    ViewBag.Title = "Quản lý ghi chú";
    Layout = "~/Views/Shared/_Site.cshtml";
    @model WEB_QLDUAN.Models.Note
}

@section Styles{


    <link rel="stylesheet" href="~/Content/adminlte/components/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/components/Ionicons/css/ionicons.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/dist/css/skins/skin-blue.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <link rel="stylesheet" href="~/Content/adminlte/components/select2/dist/css/select2.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/dist/css/AdminLTE.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/dist/css/AdminLTE.css">
    <link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/Content/adminlte/components/fullcalendar/dist/fullcalendar.min.css">
    <link rel="stylesheet" href="~/Content/adminlte/components/fullcalendar/dist/fullcalendar.print.min.css" media="print">

    <style>
        .myborderError {
            border: solid 1px red !important;
        }

        ::-webkit-input-placeholder { /* Chrome */
            color: green;
            transition: opacity 250ms ease-in-out;
            font-size: 12px;
            font-weight: 100;
            font-style: italic;
        }

        :focus::-webkit-input-placeholder {
            opacity: 0.5;
            font-size: 10px;
        }

        :-ms-input-placeholder { /* IE 10+ */
            color: red;
            transition: opacity 250ms ease-in-out;
        }

        :focus:-ms-input-placeholder {
            opacity: 0.5;
            font-size: 9px;
        }

        ::-moz-placeholder { /* Firefox 19+ */
            color: #ccc;
            opacity: 0.3;
            transition: opacity 250ms ease-in-out;
            font-size: 12px;
            font-weight: 100;
            font-style: italic;
        }

        :focus::-moz-placeholder {
            opacity: 0.5;
        }

        :-moz-placeholder { /* Firefox 4 - 18 */
            color: red;
            opacity: 1;
            transition: opacity 250ms ease-in-out;
        }

        :focus:-moz-placeholder {
            opacity: 0.5;
            font-size: 10px;
        }

        .modalLoading {
            position: fixed;
            z-index: 999;
            height: 100%;
            width: 82%;
            top: 0;
            /*background-color: Black;
                    filter: alpha(opacity=30);
                    opacity: 0.2;*/
            -moz-opacity: 0.8;
        }

        .centerLoading {
            z-index: 1000;
            margin: 300px auto;
            padding: 8px;
            width: 60px;
            background-color: #d3cccc;
            border-radius: 5px;
            filter: alpha(opacity=100);
            opacity: 1;
            -moz-opacity: 1;
            text-align: center;
            color: orangered;
            opacity: 0.8;
        }

            .centerLoading img {
                text-align: center;
            }

        .nav-list li.active > a:after {
            border-right-color: #000000;
        }

        .breadcrumb > li + li:before {
            display: none;
        }

        .btn-cauhoi {
            background-color: #c2fbd7;
            border-radius: 100px;
            box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;
            color: green;
            cursor: pointer;
            display: inline-block;
            font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;
            padding: 7px 20px;
            text-align: center;
            text-decoration: none;
            transition: all 250ms;
            border: 0;
            font-size: 16px;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }

            .btn-cauhoi:hover {
                box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;
                transform: scale(1.05) rotate(-1deg);
            }

        .table-header {
            background-color: #438eb9 !important;
        }

        #btn-scroll-up {
            display: none;
            position: fixed;
            bottom: 20px;
            right: 30px;
            z-index: 99;
            border: none;
            outline: none;
            background-color: transparent !important;
            color: white;
            cursor: pointer;
            padding: 15px;
            border-radius: 10px;
        }

            #btn-scroll-up :hover {
                background-color: #555;
            }

        #dtCauHoiThemMoi_wrapper .row:first-child {
            display: none;
        }

        #dtCauHoiThemMoi_wrapper .row:last-child {
            display: none;
        }

        #dtCauHoiCapNhat_wrapper .row:first-child {
            display: none;
        }

        #dtCauHoiCapNhat_wrapper .row:last-child {
            display: none;
        }

        .validation-summary-errors {
            font-size: 14px;
            /*margin-top: 15px;*/
            color: red;
        }

        .glyphicon.fast-right-spinner {
            -webkit-animation: glyphicon-spin-r 1s infinite linear;
            animation: glyphicon-spin-r 1s infinite linear;
        }

        .sidebar::before {
            background: #585858 !important;
        }

        .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
            color: #576373;
            border-color: #c5d0dc;
            border-top: 2px solid #4c8fbd;
            border-bottom-color: transparent;
            background-color: #FFF;
            z-index: 12;
            line-height: 16px;
            margin-top: -1px;
            box-shadow: 0 -2px 3px 0 rgba(0,0,0,0.15);
        }

        .green {
            color: #69aa46 !important;
        }

        .table-header {
            background-color: #307ecc;
            color: #FFF;
            font-size: 14px;
            line-height: 38px;
            padding-left: 12px;
            margin-bottom: 5px;
        }

        .pagination > li > a, .pagination > li > span {
            float: none;
        }

        .dataTables_length > label {
            font-size: 13px;
            font-weight: normal;
        }

        .dataTables_filter > label {
            font-size: 13px;
            font-weight: normal;
        }

        .dataTables_info {
            font-size: 13px;
        }

        .select2 {
            font-weight: bold;
        }
    </style>
}

<div class="content-wrapper" style="">
    <section class="content-header">
        <h3 class="" style="color: #dd4b39; margin-top:5px; margin-bottom:3px; display:none;">
            Notes Management
            <small>#@Session["Login"]</small>
            <i id="TongHop_Loading" class="fa fa-spinner fa-spin fa-3x fa-fw" style="font-size:18px; display:none;"></i>
            <span id="isMobile"></span>
        </h3>
        <ol class="breadcrumb">
            <li>
                <a href="javascript:void(0);" onclick="location.href='/Home/Index/'">
                    <i class=" fa fa-dashboard"></i> Home >
                </a>
            </li>
            <li class="active">Notes</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="tabbable">
                    <ul class="nav nav-tabs padding-18" style="padding-left:18px;">
                        <li class="active" style="">
                            <a data-toggle="tab" href="" style="color:darkgreen;">
                                <i class="green glyphicon glyphicon-list-alt"></i>
                                <span style="color:green; font-size:13px; font-family:Tahoma;"> Notes </span>
                            </a>
                        </li>
                    </ul>
                    <div class="form-horizontal" style="padding-top: 15px; background-color: #d5e4f1;">
                        @using (Html.BeginForm("NoteThongKe", "Home", FormMethod.Post, new { id = "frmNoteThongKe", @class = "", @style = "font-family:Tahoma;" }))
                        {
                            @Html.AntiForgeryToken();
                            <div class="form-group" style="margin-bottom:5px;">
                                <div class="col-sm-12" style="width:100%;">
                                    <label class="col-sm-3 control-label no-padding-right" style="color:#0070d1; font-weight:normal;">Note title:</label>
                                    <div class="input-icon col-sm-9">
                                        @Html.DropDownListFor(m => m.ID, new SelectList(ViewBag.lstnote, "ID", "Title"), "-- Select note --", new { @class = "form-control select2", @id = "lstID_TK", @style = "font-weight:bold; font-size:13px; height:32px; width:100%;" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom:5px">
                                <div class="col-sm-12" style="width:100%;">
                                    <label class="col-sm-3 control-label no-padding-right" style="color: #0070d1;font-weight:normal;">From date:</label>
                                    <div class="input-icon col-sm-9">
                                        @Html.TextBoxFor(m => m.CreatedDate, new { @class = "form-control", @style = "font-weight:bold; font-size:13px; height:32px;", @Type = "date", @name = "txtStartDate_TK", @id = "txtStartDate_TK", @placeholder = "From date" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom:5px">
                                <div class="col-sm-12" style="width:100%;">
                                    <label class="col-sm-3 control-label no-padding-right" style="color: #0070d1;font-weight:normal;">To date:</label>
                                    <div class="input-icon col-sm-9">
                                        @Html.TextBoxFor(m => m.CreatedDate, new { @class = "form-control", @style = "font-weight:bold; font-size:13px; height:32px;", @Type = "date", @name = "txtEndDate_TK", @id = "txtEndDate_TK", @placeholder = "To date" })
                                    </div>
                                </div>
                            </div>
                            <!-- HTML !-->
                            <div class="form-group" style="padding-bottom: 15px; padding-top:5px;">
                                <div class="col-sm-12" style="width:100%;">
                                    <div class="col-md-offset-4 col-md-8">
                                        <button id="btn_thongke" class="btn-cauhoi" type="button" style="color:#ff0000;margin-right:5px;">
                                            Filter
                                        </button>
                                        <button id="btn_refesh" class="btn-cauhoi" type="button" style="color:green;">
                                            Refesh
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="table-header">
                    Result filters <a id="btnOpenNote" style="cursor:pointer; color:yellow; font-weight:bold;margin-left:5px" data-toggle="modal" data-target="#myModal2"><i class="glyphicon glyphicon-plus" title="Thêm mới"></i></a>
                </div>

                <div class="table-responsive">
                    <div id="rowChiTiet">

                    </div>
                </div>

                <div class="row" style="margin-top:10px;">
                    <div class="col-md-3">
                        <div class="box box-solid">
                            <div class="box-header with-border">
                                <h4 class="box-title" style="">Notice</h4>
                            </div>
                            <div class="box-body">
                                <div id="external-events">
                                    <div class="external-event bg-light-blue">Note</div>
                                    <div class="external-event bg-red">Notify</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="box box-primary">
                            <div class="box-body no-padding">
                                <div id="calendar"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="">
                    <div class="vertical-alignment-helper">
                        <div class="modal-dialog modal-lg vertical-align-center">
                            <div class="modal-content">
                                <div class="modal-header" style="padding-top: 5px; padding-bottom: 5px; background-color: #028efd;">
                                    <button type="button" class="close" data-dismiss="modal" style="margin-top:-6px; color:white;">
                                        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                                    </button>
                                    <i></i>
                                    <h5 class="modal-title" id="myModalLabel" style="color: white; font-weight: bold;"><i class="glyphicon glyphicon-plus"></i> ADD A NOTE</h5>
                                </div>

                                @using (Html.BeginForm("NoteThemMoi", "Home", FormMethod.Post, new { id = "frmNoteThemMoi", @class = "" }))
                                {
                                    @Html.AntiForgeryToken();

                                    <div class="modal-body" style="font-size: 12px; padding-top: 5px; background-color: #d5e4f1; padding-bottom:0px;">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 10px; color: #016abb;">Title</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @style = "background-color:#f9fbc8 !important; height:32px;", @name = "Title", @id = "txtTitle_themmoi", @placeholder = "Title" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 10px; COLOR: #016abb;">Description</label>
                                                    <div class="col-md-10">
                                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @style = "margin-top:5px;", @name = "txtDescription_themmoi", @id = "txtDescription_themmoi", @placeholder = "Description" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 5px; color: #016abb">Notify</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.Notify, new { @class = "", @Type = "checkbox", @style = "margin-top:5px;", @name = "txtNotify_themmoi", @id = "txtNotify_themmoi" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 5px; color: #016abb">Notify date</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.NotifyDate, new { @class = "form-control", @style = "height:32px;", @Type = "datetime-local", @name = "NotifyDate", @id = "txtNotifyDate_themmoi", @placeholder = "dd/MM/yyyy HH:mm" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="col-sm-offset-2 col-sm-10" style="margin-top:10px;">
                                                    @Html.ValidationSummary()
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer" style="margin-top:0px;">
                                        <button id="btnInsert" type="submit" class="btn-cauhoi" style="color: #ff0000; margin-right:5px">
                                            Save
                                        </button>
                                        <button id="btnCloseThemMoi" type="reset" class="btn-cauhoi" data-dismiss="modal">Close</button>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="myModal3" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="">
                    <div class="vertical-alignment-helper">
                        <div class="modal-dialog modal-lg vertical-align-center">
                            <div class="modal-content">
                                <div class="modal-header" style="padding-top: 5px; padding-bottom: 5px; background-color: #f58f1a;">
                                    <button type="button" class="close" data-dismiss="modal" style="margin-top:-6px; color:white;">
                                        <span style="color:white;" aria-hidden="true">&times;</span><span style="color:white" class="sr-only">Close</span>
                                    </button>
                                    <i></i>
                                    <h5 class="modal-title" id="myModalLabel" style="color: white; font-weight: bold;"><i class="glyphicon glyphicon-th"></i><span style="margin-left:5px;">EDIT NOTE</span></h5>
                                </div>

                                @using (Html.BeginForm("NoteCapNhat", "Home", FormMethod.Post, new { id = "frmNoteCapNhat", @class = "" }))
                                {
                                    @Html.AntiForgeryToken();

                                    <div class="modal-body" style="font-size: 12px; padding-top: 5px; background-color: #d5e4f1; padding-bottom:10px;">
                                        <div class="row">
                                            @Html.HiddenFor(m => m.ID, new { @class = "form-control", @style = "text-transform: uppercase; background-color:#f9fbc8 !important;", @name = "ID", @id = "txtID_capnhat", @placeholder = "Note ID" })

                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 10px; color: #016abb;">Title</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @style = "background-color:#f9fbc8 !important; height:32px;", @name = "Title", @id = "txtTitle_capnhat", @placeholder = "Title" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 10px; COLOR: #016abb;">Description</label>
                                                    <div class="col-md-10">
                                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @style = "margin-top:5px;", @name = "txtDescription_capnhat", @id = "txtDescription_capnhat", @placeholder = "Description" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 5px; color: #016abb">Notify</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.Notify, new { @class = "control-label", @Type = "checkbox", @style = "margin-top:5px;", @name = "txtNotify_capnhat", @id = "txtNotify_capnhat" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="margin-top: 5px; color: #016abb">Notify Date</label>
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.NotifyDate, new { @class = "form-control", @Type = "datetime-local", @style = "height:32px;", @name = "txtNotifyDate_capnhat", @id = "txtNotifyDate_capnhat" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="col-sm-offset-2 col-sm-10" style="margin-top:10px;">
                                                    @Html.ValidationSummary()
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer" style="margin-top:0px;">
                                        <button id="btnUpdate" type="submit" class="btn-cauhoi" style="color: #ff0000; margin-right:5px">
                                            Save
                                        </button>
                                        <button id="btnClose" type="reset" class="btn-cauhoi" data-dismiss="modal">Close</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@if (ViewData["DialogNote"] != null)
{
    if (ViewData["NOTE_THEMMOI"] != null)
    {
        <script type="text/javascript" charset="utf-8">
            window.onload = function () {
                document.getElementById("btnOpenNote").click();
                alert('@Html.Raw(@ViewData["NOTE_THEMMOI"])');
            };
        </script>
    }
    else
    {
        <script type="text/javascript" charset="utf-8">
            window.onload = function () {
                document.getElementById("btnOpenNote").click();
            };
        </script>
    }
}
else
{
    if (ViewData["NOTE_THEMMOI"] != null)
    {
        <script type="text/javascript" charset="utf-8">
            window.onload = function () {
                alert('@Html.Raw(@ViewData["NOTE_THEMMOI"])');
            };
        </script>
    }
}

@if (ViewData["NOTE_CAPNHAT"] != null)
{
    <script type="text/javascript" charset="utf-8">
        window.onload = function () {
            alert('@Html.Raw(@ViewData["NOTE_CAPNHAT"])');
            document.getElementById("btn_thongke").click();
        };
    </script>
}

@Scripts.Render("~/bundles/jqueryval");
@section Scripts{
    <script src="~/Content/adminlte/components/jquery/dist/jquery.min.js"></script>
    <script src="~/Content/adminlte/components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/Content/adminlte/components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Content/adminlte/dist/js/adminlte.min.js"></script>
    <script src="~/Content/adminlte/components/chart.js/Chart.js"></script>

    <script src="~/Content/adminlte/components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/adminlte/components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/adminlte/components/select2/dist/js/select2.full.min.js"></script>
    <script src="~/tra-cuu/Scripts/Customer.js"></script>

    <script src="~/Content/adminlte/components/moment/moment.js"></script>
    <script src="~/Content/adminlte/components/fullcalendar/dist/fullcalendar.min.js"></script>
    <script>
        $(document).ready(function () {

            $('.select2').select2();

            $('#btn_thongke').off('click').on('click', function () {
                this.disabled = true;

                $('#txtStartDate_TK').removeClass('myborderError');
                $('#txtEndDate_TK').removeClass('myborderError');

                var ID = $('#lstID_TK').val();
                var TUNGAY = $('#txtStartDate_TK').val();
                var DENNGAY = $('#txtEndDate_TK').val();

                var form = $('#frmNoteThongKe');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var uri = "/Home/FilterNote/";

                if (((TUNGAY == null || TUNGAY.trim() == "") && (DENNGAY != null && DENNGAY.trim() != ""))
                    || ((DENNGAY == null || DENNGAY.trim() == "") && (TUNGAY != null && TUNGAY.trim() != ""))) {
                    if (TUNGAY == null || TUNGAY.trim() == "") {
                        alert("Vui lòng nhập từ ngày!");
                        $('#txtStartDate_TK').addClass('myborderError');
                        $('#txtStartDate_TK').focus();
                    }
                    else {
                        alert("Vui lòng nhập đến ngày!");
                        $('#txtEndDate_TK').addClass('myborderError');
                        $('#txtEndDate_TK').focus();
                    }
                    document.getElementById('btn_thongke').disabled = false;
                }
                else {
                    $.ajax({
                        url: uri,
                        data: {
                            __RequestVerificationToken: token,
                            ID: ID,
                            TUNGAY: TUNGAY,
                            DENNGAY: DENNGAY
                        },
                        type: "POST",
                        success: function (response) {
                            document.getElementById('btn_thongke').disabled = false;
                            $('#rowChiTiet').html(response);
                            location.href = "#rowChiTiet";
                        },
                        error: function (xhr, status, error) {
                            //$("FilterProjectLoading").hide();
                            var err = xhr.responseText;
                            alert(err);
                            document.getElementById('btn_thongke').disabled = false;

                        }
                        //error: function (response) {
                        //    //$("FilterUserLoading").hide();
                        //    alert("Có lỗi trong quá trình tra cứu dữ liệu. Vui lòng kiểm tra lại!");
                        //    document.getElementById('btn_thongke').disabled = false;
                        //}
                    });
                }
            });

            $('#btn_refesh').off('click').on('click', function () {
                window.location.href = "/Home/Note/";
            });

            $('#btnCloseThemMoi').off('click').on('click', function () {
                $('#txtTitle_themmoi').val('');
                $('#txtDescription_themmoi').val('');
                $('#txtNotify_themmoi').val('');
                $('#txtNotifyDate_themmoi').val('');

                $('.validation-summary-errors').remove();
            });

            $('#btnInsert').off('click').on('click', function () {
                var title = $('#txtTitle_themmoi').val();
                var notify = document.getElementById("txtNotify_capnhat").checked;
                var notifydate = $('#txtNotifyDate_capnhat').val();

                if (title == '') {
                    alert("Vui lòng nhập title note!");
                    $('#txtTitle_themmoi').focus();
                    return false;
                }
                else if (notify != null && notify == true && notifydate.trim() == "") {
                    alert("Vui lòng nhập notify date!");
                    $('#txtNotifyDate_capnhat').focus();
                    return false;
                }
            });

            $('#btnUpdate').off('click').on('click', function () {
                var ID = $('#txtID_capnhat').val();
                var title = $('#txtTitle_capnhat').val();
                var notify = document.getElementById("txtNotify_capnhat").checked;
                var notifydate = $('#txtNotifyDate_capnhat').val();

                if (ID == '') {
                    alert("Không xác định được note cần sửa dữ liệu!");
                    return false;
                }
                else if (title == '') {
                    alert("Vui lòng nhập title note!");
                    $('#txtTitle_capnhat').focus();
                    return false;
                }
                else if (notify != null && notify == true && notifydate.trim() == "") {
                    alert("Vui lòng nhập notify date!");
                    $('#txtNotifyDate_capnhat').focus();
                    return false;
                }
            });

            document.getElementById("btn_thongke").click();

            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },
                eventClick: function (event, jsEvent, view) {
                    if (event.id != null && event.id != "") {
                        fnUpdateNote(event.id);
                        $('#myModal3').modal();
                    };
                },
                editable: false,
                droppable: false, // this allows things to be dropped onto the calendar !!!
                drop: function (date, allDay) { // this function is called when something is dropped
                    // retrieve the dropped element's stored Event Object
                    var originalEventObject = $(this).data('eventObject')

                    // we need to copy it, so that multiple events don't have a reference to the same object
                    var copiedEventObject = $.extend({}, originalEventObject)

                    // assign it the date that was reported
                    copiedEventObject.start = date
                    copiedEventObject.allDay = allDay
                    copiedEventObject.backgroundColor = $(this).css('background-color')
                    copiedEventObject.borderColor = $(this).css('border-color')

                    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)

                    // is the "remove after drop" checkbox checked?
                    if ($('#drop-remove').is(':checked')) {
                        // if so, remove the element from the "Draggable Events" list
                        $(this).remove()
                    }
                }
            });

            $.ajax({
                url: "/Home/LoadAllNote/",
                type: "POST",
                dataType: "json",

                success: function (response) {
                    if (response != '') {
                        for (i in response) {
                            if (response[i].Notify != null && response[i].Notify == true && response[i].NotifyDate != null) {

                                const d = new Date(response[i].NotifyDate.match(/\d+/)[0] * 1);
                                var hh = d.getHours();
                                if (hh < 10) {
                                    hh = '0' + hh;
                                }

                                var mm = d.getMinutes();
                                if (mm < 10) {
                                    mm = '0' + mm;
                                }

                                var originalEventObject = $('#calendar').data('eventObject')
                                var copiedEventObject = $.extend({}, originalEventObject)

                                copiedEventObject.start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), hh, mm);
                                copiedEventObject.allDay = false;
                                copiedEventObject.backgroundColor = 'red';
                                copiedEventObject.borderColor = 'black';
                                copiedEventObject.title = response[i].Title;
                                copiedEventObject.id = response[i].ID;
                                //copiedEventObject.url = '#myModal3';
                                //copiedEventObject.data = "modal";

                                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
                            }
                            else {
                                const d = new Date(response[i].CreatedDate.match(/\d+/)[0] * 1);
                                var hh = d.getHours();
                                if (hh < 10) {
                                    hh = '0' + hh;
                                }

                                var mm = d.getMinutes();
                                if (mm < 10) {
                                    mm = '0' + mm;
                                }

                                var originalEventObject = $('#calendar').data('eventObject')
                                var copiedEventObject = $.extend({}, originalEventObject)

                                copiedEventObject.start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), hh, mm);
                                copiedEventObject.allDay = false;
                                copiedEventObject.backgroundColor = '#3c8dbc';
                                copiedEventObject.borderColor = 'black';
                                copiedEventObject.title = response[i].Title;
                                copiedEventObject.id = response[i].ID;
                                //copiedEventObject.url = '#myModal3';
                                //copiedEventObject.data = "modal";

                                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
                            }
                        };
                    };
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    // alert(xhr.status);
                    alert("Có lỗi trong quá trình load thông tin note. Vui lòng kiểm tra lại!");
                }
            });
        });

        function fnUpdateNote(_id) {
            $.ajax({
                url: "/Home/LoadNote/",
                data: {
                    ID: _id
                },
                type: "POST",
                dataType: "json",

                success: function (response) {
                    if (response != '') {
                        for (i in response) {
                            $('#txtID_capnhat').val(response[i].ID);
                            $('#txtTitle_capnhat').val(response[i].Title);
                            $('#txtDescription_capnhat').val(response[i].Description);

                            if (response[i].Notify != null) {
                                $('#txtNotify_capnhat').prop("checked", response[i].Notify)
                            }
                            else {
                                $('#txtNotify_capnhat').prop("checked", false)
                            }

                            if (response[i].NotifyDate != null) {
                                const d = new Date(response[i].NotifyDate.match(/\d+/)[0] * 1);
                                var hh = d.getHours();
                                if (hh < 10) {
                                    hh = '0' + hh;
                                }

                                var mm = d.getMinutes();
                                if (mm < 10) {
                                    mm = '0' + mm;
                                }

                                const formattedDate = d.getFullYear() + '-' + ("0" + (d.getMonth() + 1)).slice(-2) + '-' + ("0" + d.getDate()).slice(-2) + ' ' + hh + ":" + mm;
                                $('#txtNotifyDate_capnhat').val(formattedDate);
                            }
                            else {
                                $('#txtNotifyDate_capnhat').val('');
                            }
                        }
                    };
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    // alert(xhr.status);
                    alert("Có lỗi trong quá trình load thông tin note. Vui lòng kiểm tra lại!");
                }
            });
        };

        function fnDeleteNote(_id) {
            const response = confirm("Bạn có chắc là muốn xóa note này ?");

            if (response) {
                $.ajax({
                    url: "/Home/DeleteNote/",
                    data: {
                        ID: _id
                    },
                    type: "POST",
                    dataType: "json",

                    success: function (response) {
                        if (response != '') {
                            alert(response);
                            document.getElementById("btn_thongke").click();
                        };
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        // alert(xhr.status);
                        alert("Đã có lỗi. Vui lòng kiểm tra lại!");
                    }
                });
            } else {
                return false;
            }
        };

        function CheckEmailFormat(email) {
            var regex = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            if (!regex.test(email)) {
                return false;
            }
            else {
                return true;
            }
        };
    </script>
}